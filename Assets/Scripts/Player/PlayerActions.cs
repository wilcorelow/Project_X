//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/Scripts/Player/PlayerActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerActions : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerActions"",
    ""maps"": [
        {
            ""name"": ""Collapsed"",
            ""id"": ""1ab03536-f412-443b-b95f-4c4443054836"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""e711c984-ed3f-464b-871c-0ea7c8f3286d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""PassThrough"",
                    ""id"": ""803e94a0-9332-437b-a190-f2670634f14d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""15c12d3f-9a0b-4b42-bdac-4f3ff30c678e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": ""Press(behavior=1)"",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MousePosition"",
                    ""type"": ""PassThrough"",
                    ""id"": ""1f7cb1a6-4d09-4b08-8948-625b3c74d85b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""4e660039-9b04-4d99-9741-f8b1c7070370"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TempUnequipItems"",
                    ""type"": ""Button"",
                    ""id"": ""93b54b35-28c5-4bcb-a040-1159eca5a596"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TempArmL"",
                    ""type"": ""Button"",
                    ""id"": ""50cbeabd-62e3-49b3-89fe-c6cbb9e7a115"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""TempArmR"",
                    ""type"": ""Button"",
                    ""id"": ""85d79c95-3674-494c-aa9a-cdb1e1b1a1f9"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSwitchingWhell"",
                    ""type"": ""PassThrough"",
                    ""id"": ""016a7f2c-a7ce-4b2c-8c19-1847cc495569"",
                    ""expectedControlType"": ""Axis"",
                    ""processors"": ""Normalize(min=-1,max=1),Clamp(min=-1,max=1)"",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSelectFirst"",
                    ""type"": ""Button"",
                    ""id"": ""2f25d53a-816a-4c80-a38d-8e4bb0efd1f8"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSelectSecond"",
                    ""type"": ""Button"",
                    ""id"": ""7785376f-182f-46d8-b638-b6fdb340b26b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""WeaponSelectThird"",
                    ""type"": ""Button"",
                    ""id"": ""1b31829f-ccb2-48c4-96a4-771e2a52e655"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""cf23eb6a-46ad-4f0a-bf3d-b582f4fb9db4"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""WASD"",
                    ""id"": ""0385473e-3386-47b7-9021-b2c1d9b7a359"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a837bf28-11c6-42c8-9fa8-f027af53090c"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""f56413f2-91f8-4e01-baf7-3014f269acdb"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Arrows"",
                    ""id"": ""0c445f8c-c2e7-4e3f-82cb-9dce62a79ccc"",
                    ""path"": ""1DAxis"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""negative"",
                    ""id"": ""a8e61a11-4b70-49a2-aa1b-5dbda3aeebbc"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""positive"",
                    ""id"": ""cd55f744-7e33-4c37-8360-f0490be582b7"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""16e73ffa-9ead-4a5c-adcd-fb7d8be2411b"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""0d5e8590-5db5-4576-b95f-e070e900d17d"",
                    ""path"": ""<Mouse>/position"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""MousePosition"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1a013320-9d48-42dc-9f9e-9f966cff38ec"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""dec6568e-ffa2-42f4-a226-2010309447a7"",
                    ""path"": ""<Keyboard>/b"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""92de4f2c-39a0-41ba-be0a-ede5e16c18d3"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TempUnequipItems"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""673e0a38-7bc1-4e5e-ad8d-0f264abac179"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TempArmL"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""980fd773-5bdc-4394-9144-a71c743694a1"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": ""Press"",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""TempArmR"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f42962d2-6ec5-44f3-af14-e25b19aafaee"",
                    ""path"": ""<Mouse>/scroll/y"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSwitchingWhell"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c92c6e18-ed1d-4dba-9a56-dfe2a2b1aad8"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSelectFirst"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e425b7bc-2484-4b52-8ddd-7eea017d3e03"",
                    ""path"": ""<Keyboard>/2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSelectSecond"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ad6d0d95-9310-4ef5-943c-37de9c7be41c"",
                    ""path"": ""<Keyboard>/3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""WeaponSelectThird"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Awaken"",
            ""id"": ""99b0f9ee-96c9-4f11-9fa5-9132538b4ead"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""41974eac-01c1-4800-ba3e-e462f17056d3"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""25248383-e6b7-41ee-a960-c5cb4e70fec1"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Collapsed
        m_Collapsed = asset.FindActionMap("Collapsed", throwIfNotFound: true);
        m_Collapsed_Shoot = m_Collapsed.FindAction("Shoot", throwIfNotFound: true);
        m_Collapsed_Movement = m_Collapsed.FindAction("Movement", throwIfNotFound: true);
        m_Collapsed_Interact = m_Collapsed.FindAction("Interact", throwIfNotFound: true);
        m_Collapsed_MousePosition = m_Collapsed.FindAction("MousePosition", throwIfNotFound: true);
        m_Collapsed_Inventory = m_Collapsed.FindAction("Inventory", throwIfNotFound: true);
        m_Collapsed_TempUnequipItems = m_Collapsed.FindAction("TempUnequipItems", throwIfNotFound: true);
        m_Collapsed_TempArmL = m_Collapsed.FindAction("TempArmL", throwIfNotFound: true);
        m_Collapsed_TempArmR = m_Collapsed.FindAction("TempArmR", throwIfNotFound: true);
        m_Collapsed_WeaponSwitchingWhell = m_Collapsed.FindAction("WeaponSwitchingWhell", throwIfNotFound: true);
        m_Collapsed_WeaponSelectFirst = m_Collapsed.FindAction("WeaponSelectFirst", throwIfNotFound: true);
        m_Collapsed_WeaponSelectSecond = m_Collapsed.FindAction("WeaponSelectSecond", throwIfNotFound: true);
        m_Collapsed_WeaponSelectThird = m_Collapsed.FindAction("WeaponSelectThird", throwIfNotFound: true);
        // Awaken
        m_Awaken = asset.FindActionMap("Awaken", throwIfNotFound: true);
        m_Awaken_Newaction = m_Awaken.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Collapsed
    private readonly InputActionMap m_Collapsed;
    private ICollapsedActions m_CollapsedActionsCallbackInterface;
    private readonly InputAction m_Collapsed_Shoot;
    private readonly InputAction m_Collapsed_Movement;
    private readonly InputAction m_Collapsed_Interact;
    private readonly InputAction m_Collapsed_MousePosition;
    private readonly InputAction m_Collapsed_Inventory;
    private readonly InputAction m_Collapsed_TempUnequipItems;
    private readonly InputAction m_Collapsed_TempArmL;
    private readonly InputAction m_Collapsed_TempArmR;
    private readonly InputAction m_Collapsed_WeaponSwitchingWhell;
    private readonly InputAction m_Collapsed_WeaponSelectFirst;
    private readonly InputAction m_Collapsed_WeaponSelectSecond;
    private readonly InputAction m_Collapsed_WeaponSelectThird;
    public struct CollapsedActions
    {
        private @PlayerActions m_Wrapper;
        public CollapsedActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_Collapsed_Shoot;
        public InputAction @Movement => m_Wrapper.m_Collapsed_Movement;
        public InputAction @Interact => m_Wrapper.m_Collapsed_Interact;
        public InputAction @MousePosition => m_Wrapper.m_Collapsed_MousePosition;
        public InputAction @Inventory => m_Wrapper.m_Collapsed_Inventory;
        public InputAction @TempUnequipItems => m_Wrapper.m_Collapsed_TempUnequipItems;
        public InputAction @TempArmL => m_Wrapper.m_Collapsed_TempArmL;
        public InputAction @TempArmR => m_Wrapper.m_Collapsed_TempArmR;
        public InputAction @WeaponSwitchingWhell => m_Wrapper.m_Collapsed_WeaponSwitchingWhell;
        public InputAction @WeaponSelectFirst => m_Wrapper.m_Collapsed_WeaponSelectFirst;
        public InputAction @WeaponSelectSecond => m_Wrapper.m_Collapsed_WeaponSelectSecond;
        public InputAction @WeaponSelectThird => m_Wrapper.m_Collapsed_WeaponSelectThird;
        public InputActionMap Get() { return m_Wrapper.m_Collapsed; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(CollapsedActions set) { return set.Get(); }
        public void SetCallbacks(ICollapsedActions instance)
        {
            if (m_Wrapper.m_CollapsedActionsCallbackInterface != null)
            {
                @Shoot.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnShoot;
                @Movement.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInteract;
                @MousePosition.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMousePosition;
                @MousePosition.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMousePosition;
                @MousePosition.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnMousePosition;
                @Inventory.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInventory;
                @Inventory.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInventory;
                @Inventory.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnInventory;
                @TempUnequipItems.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempUnequipItems;
                @TempUnequipItems.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempUnequipItems;
                @TempUnequipItems.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempUnequipItems;
                @TempArmL.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmL;
                @TempArmL.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmL;
                @TempArmL.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmL;
                @TempArmR.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmR;
                @TempArmR.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmR;
                @TempArmR.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnTempArmR;
                @WeaponSwitchingWhell.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSwitchingWhell;
                @WeaponSwitchingWhell.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSwitchingWhell;
                @WeaponSwitchingWhell.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSwitchingWhell;
                @WeaponSelectFirst.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectFirst;
                @WeaponSelectFirst.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectFirst;
                @WeaponSelectFirst.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectFirst;
                @WeaponSelectSecond.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectSecond;
                @WeaponSelectSecond.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectSecond;
                @WeaponSelectSecond.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectSecond;
                @WeaponSelectThird.started -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectThird;
                @WeaponSelectThird.performed -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectThird;
                @WeaponSelectThird.canceled -= m_Wrapper.m_CollapsedActionsCallbackInterface.OnWeaponSelectThird;
            }
            m_Wrapper.m_CollapsedActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @MousePosition.started += instance.OnMousePosition;
                @MousePosition.performed += instance.OnMousePosition;
                @MousePosition.canceled += instance.OnMousePosition;
                @Inventory.started += instance.OnInventory;
                @Inventory.performed += instance.OnInventory;
                @Inventory.canceled += instance.OnInventory;
                @TempUnequipItems.started += instance.OnTempUnequipItems;
                @TempUnequipItems.performed += instance.OnTempUnequipItems;
                @TempUnequipItems.canceled += instance.OnTempUnequipItems;
                @TempArmL.started += instance.OnTempArmL;
                @TempArmL.performed += instance.OnTempArmL;
                @TempArmL.canceled += instance.OnTempArmL;
                @TempArmR.started += instance.OnTempArmR;
                @TempArmR.performed += instance.OnTempArmR;
                @TempArmR.canceled += instance.OnTempArmR;
                @WeaponSwitchingWhell.started += instance.OnWeaponSwitchingWhell;
                @WeaponSwitchingWhell.performed += instance.OnWeaponSwitchingWhell;
                @WeaponSwitchingWhell.canceled += instance.OnWeaponSwitchingWhell;
                @WeaponSelectFirst.started += instance.OnWeaponSelectFirst;
                @WeaponSelectFirst.performed += instance.OnWeaponSelectFirst;
                @WeaponSelectFirst.canceled += instance.OnWeaponSelectFirst;
                @WeaponSelectSecond.started += instance.OnWeaponSelectSecond;
                @WeaponSelectSecond.performed += instance.OnWeaponSelectSecond;
                @WeaponSelectSecond.canceled += instance.OnWeaponSelectSecond;
                @WeaponSelectThird.started += instance.OnWeaponSelectThird;
                @WeaponSelectThird.performed += instance.OnWeaponSelectThird;
                @WeaponSelectThird.canceled += instance.OnWeaponSelectThird;
            }
        }
    }
    public CollapsedActions @Collapsed => new CollapsedActions(this);

    // Awaken
    private readonly InputActionMap m_Awaken;
    private IAwakenActions m_AwakenActionsCallbackInterface;
    private readonly InputAction m_Awaken_Newaction;
    public struct AwakenActions
    {
        private @PlayerActions m_Wrapper;
        public AwakenActions(@PlayerActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_Awaken_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_Awaken; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(AwakenActions set) { return set.Get(); }
        public void SetCallbacks(IAwakenActions instance)
        {
            if (m_Wrapper.m_AwakenActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_AwakenActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_AwakenActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_AwakenActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_AwakenActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public AwakenActions @Awaken => new AwakenActions(this);
    public interface ICollapsedActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnMousePosition(InputAction.CallbackContext context);
        void OnInventory(InputAction.CallbackContext context);
        void OnTempUnequipItems(InputAction.CallbackContext context);
        void OnTempArmL(InputAction.CallbackContext context);
        void OnTempArmR(InputAction.CallbackContext context);
        void OnWeaponSwitchingWhell(InputAction.CallbackContext context);
        void OnWeaponSelectFirst(InputAction.CallbackContext context);
        void OnWeaponSelectSecond(InputAction.CallbackContext context);
        void OnWeaponSelectThird(InputAction.CallbackContext context);
    }
    public interface IAwakenActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
